{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","selectedTabId","tabs","onTabSelected","currentTab","find","tab","id","title","content","className","map","href","onClick","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAAO,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,cAAeC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,cACtCC,EAAaF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAON,KAExCG,IAEHA,EAAaF,EAAK,IAGpB,MAA+BE,EAAvBI,EAAR,EAAQA,MAAOD,EAAf,EAAeA,GAAIE,EAAnB,EAAmBA,QAEnB,OACE,qCACE,oBAAIC,UAAU,QAAd,mCACsBN,GAAcI,KAEpC,sBAAK,UAAQ,gBAAb,UACE,qBAAKE,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAL,GAAG,OACX,oBACEI,UAAS,UAAKH,IAAOD,EAAIC,IAAM,aAC/B,UAAQ,MAFV,SAKE,mBACEK,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,kBAAMZ,IAAkBK,EAAIC,IAAMJ,EAAcG,IAH3D,SAKGA,EAAIE,iBAMf,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGN,GAAcK,WCrCZP,EAAO,CAClB,CAAEK,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BK,EAAgB,WAC3B,MAA0CC,mBAAiBb,EAAK,GAAGK,IAAnE,mBAAON,EAAP,KAAsBe,EAAtB,KAMA,OACE,qBAAKN,UAAU,UAAf,SACE,cAAC,EAAD,CACET,cAAeA,EACfC,KAAMA,EACNC,cATW,SAACG,GAChBU,EAAiBV,EAAIC,UCdzBU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e0e7da69.chunk.js","sourcesContent":["import { Tab } from '../../../types/Tab';\n\ninterface TabsProps {\n  selectedTabId: string,\n  tabs: Tab[],\n  onTabSelected: (id: Tab) => void,\n}\n\nexport const Tabs = ({ selectedTabId, tabs, onTabSelected }: TabsProps) => {\n  let currentTab = tabs.find(tab => tab.id === selectedTabId);\n\n  if (!currentTab) {\n    // eslint-disable-next-line prefer-destructuring\n    currentTab = tabs[0];\n  }\n\n  const { title, id, content } = currentTab;\n\n  return (\n    <>\n      <h1 className=\"title\">\n        {`Selected tab is ${currentTab && title}`}\n      </h1>\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              <li\n                className={`${id === tab.id && 'is-active'}`}\n                data-cy=\"Tab\"\n\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => selectedTabId !== tab.id && onTabSelected(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"block\" data-cy=\"TabContent\">\n          {currentTab && content}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Tab } from '../types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState<string>(tabs[0].id);\n\n  const swapTabs = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <Tabs\n        selectedTabId={selectedTabId}\n        tabs={tabs}\n        onTabSelected={swapTabs}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}